name: Integration tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  integrations_tests:
    runs-on: ubuntu-latest

    strategy:
      # Do not fail if one the tests did not pass
      fail-fast: false

      matrix:
        # Python version(s) to use when running the tests
        python:
         - "3.10"

        # Docker images of MySQL-compliant databases to run the tests suite on
        database:
          # https://hub.docker.com/_/mysql?tab=tags
          - "mysql:5.7.32"
          - "mysql:8.0.22"
          - "mysql:8.1.0"
          # https://hub.docker.com/_/mariadb?tab=tags
          - "mariadb:10.1"
          - "mariadb:10.2"
          - "mariadb:10.5"
          - "mariadb:10.6"
          # https://hub.docker.com/_/percona?tab=tags
          - "percona:8.0.22-13"

    services:
        mysql:
            image: ${{ matrix.database }}
            env:
                MYSQL_ALLOW_EMPTY_PASSWORD: yes
                MYSQL_DATABASE: index_digest
            ports:
                - "53306:3306"
            options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4.0.0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    # https://github.com/actions/cache/blob/main/examples.md#using-pip-to-get-cache-location
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install wheel
        make install

    - name: Linter
      run: make lint

    - name: Set up the database
      run: |
        docker ps
        mysql --protocol=tcp --port=53306 -u root --password="" -v < setup.sql
        # import the test schema files
        "./sql/populate.sh"
        mysql --protocol=tcp --port=53306 -uindex_digest -pqwerty index_digest -v -e '\s; SHOW TABLES; SHOW DATABASES;'

    - name: Tests
      run: make test
